service: bookmark-api

frameworkVersion: ">=1.28.0 <2.0.0"

plugins:
  - serverless-offline
  - serverless-domain-manager
  - serverless-puresec-cli # Does not support go1.x

provider:
  name: aws
  runtime: go1.x
  stage: ${opt:stage, 'dev'}
  timeout: 10
  memorySize: 512
  region: us-east-2
  versionFunctions: false
  tags:
    OWNER: ekocaman
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:custom.dynamo-bookmark-name}"
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:custom.dynamo-user-name}"
    - Effect: Allow
      Action:
        - sqs:GetQueueUrl
        - sqs:DeleteMessage
        - sqs:ReceiveMessage
        - sqs:SendMessage
      Resource: arn:aws:sqs:*:*:*

  environment: ${file(./config/${self:provider.stage}.yml)}

custom:
  serverless-offline:
    useDocker: true
  customDomain:
    domainName: api.booklog.link
    certificateName: "*.booklog.link"
    stage: ${self:provider.stage}
    createRoute53Record: true
  endpoints:
    dynamodb-url: "http://localhost:8000"
  region: ${self:provider.region}
  stage: ${opt:stage, self:provider.stage}
  prefix: ${self:custom.stage}-${self:service}
  dynamo-bookmark-name: ${self:custom.prefix}-bookmark-catalog
  dynamo-user-name: ${self:custom.prefix}-user-catalog
  sqs-bookmark-name: ${self:custom.prefix}-processing-queue
  secrets: ${file(secrets.yml)}
  dynamodb:
    stages:
      - dev
    start:
      port: 8000
      migrate: true
      seed: false

package:
  exclude:
    - ./**
    - .git/**
    - .vscode/**
    - .idea/**
    - .dynamodb/**
    - .test/**
    - node_modules/**
  include:
    - ./bin/**

functions:
  auth:
    handler: bin/auth/lambda/main
    cors: true
  bookmark:
    handler: bin/bookmark/lambda/main
    events:
      - http:
          path: /signin/google
          method: GET
      - http:
          path: /callback
          method: GET
      - http:
          path: /auth/{any+}
          method: ANY
          authorizer: auth
      - http:
          path: /api/v1/bookmarks
          method: ANY
          authorizer: auth
      - http:
          path: /api/v1/bookmarks/{any+}
          method: ANY
          authorizer: auth
    tags:
      Service: bookmark
  worker:
    handler: bin/bookmark/worker/main
    events:
      - sqs:
          arn:
            Fn::GetAtt:
              - BookmarkQueueExample
              - Arn
          batchSize: 10

resources:
  Resources:
    BookmarkCatalog:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.dynamo-bookmark-name}
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: range
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
          - AttributeName: range
            KeyType: RANGE
    UserCatalog:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.dynamo-user-name}
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        AttributeDefinitions:
          - AttributeName: username
            AttributeType: S
          - AttributeName: method
            AttributeType: S
        KeySchema:
          - AttributeName: username
            KeyType: HASH
          - AttributeName: method
            KeyType: RANGE

    BookmarkQueueExample:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: ${self:custom.sqs-bookmark-name}
        MessageRetentionPeriod: 1209600
        VisibilityTimeout: 60
