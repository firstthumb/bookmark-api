// Code generated by Wire. DO NOT EDIT.

//go:generate wire
//+build !wireinject

package di

import (
	"bookmark-api/internal/auth"
	"bookmark-api/internal/bookmark"
	"bookmark-api/internal/user"
	"bookmark-api/pkg/logger"
	"github.com/google/wire"
)

// Injectors from wire.go:

func CreateBookmarkApi() (bookmark.Api, error) {
	zapLogger := logger.NewLogger()
	repository := bookmark.NewRepository(zapLogger)
	service := bookmark.NewService(repository, zapLogger)
	api := bookmark.NewApi(service, zapLogger)
	return api, nil
}

func CreateAuthApi() (auth.Api, error) {
	googleOAuth := auth.NewGoogleOAuth()
	zapLogger := logger.NewLogger()
	authAuth := auth.NewAuth(googleOAuth, zapLogger)
	api := auth.NewApi(authAuth, zapLogger)
	return api, nil
}

func CreateBookmarkService() (bookmark.Service, error) {
	zapLogger := logger.NewLogger()
	repository := bookmark.NewRepository(zapLogger)
	service := bookmark.NewService(repository, zapLogger)
	return service, nil
}

func CreateAuth() (*auth.Auth, error) {
	googleOAuth := auth.NewGoogleOAuth()
	zapLogger := logger.NewLogger()
	authAuth := auth.NewAuth(googleOAuth, zapLogger)
	return authAuth, nil
}

// wire.go:

var inject = wire.NewSet(logger.Inject, bookmark.Inject, auth.Inject, user.Inject)

var injectAuthorizer = wire.NewSet(logger.Inject, auth.Inject)
